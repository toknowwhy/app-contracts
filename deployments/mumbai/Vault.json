{
  "address": "0xEF2fFbFa3993e4b33a9DBB4374c2c8ee474BFD45",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tinu",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAssets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        }
      ],
      "name": "CollateralOwnerTrasnfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationPrice",
          "type": "uint256"
        }
      ],
      "name": "DecreaseCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationPrice",
          "type": "uint256"
        }
      ],
      "name": "DecreaseDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationPrice",
          "type": "uint256"
        }
      ],
      "name": "IncreaseCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationPrice",
          "type": "uint256"
        }
      ],
      "name": "IncreaseDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAssets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unitDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeTo",
          "type": "address"
        }
      ],
      "name": "LiquidateCollateral",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        }
      ],
      "name": "_getLiquidationPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowances",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseCollateral",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseCollateralFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "decreaseDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "increaseCollateral",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "increaseDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "increaseDebtFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "liquidation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationTreasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ratio",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidationTreasuryFee",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationTreasuryFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumCollateral",
          "type": "uint256"
        }
      ],
      "name": "setMinimumCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tinu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "tokenToTinu",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        }
      ],
      "name": "transferVaultOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "upgradeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_checkCollateral",
          "type": "bool"
        }
      ],
      "name": "validateLiquidation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultOwnerAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAssets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tinuDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultPoolAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAssets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tinuDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x827b41d1c4c91ead2bfa67e0d029053a621ca1f052dd4b2fe780badacfd449db",
  "receipt": {
    "to": null,
    "from": "0xC5feaF9c4bac539c178bef3Aa55d05F4D22F2aBB",
    "contractAddress": "0xEF2fFbFa3993e4b33a9DBB4374c2c8ee474BFD45",
    "transactionIndex": 2,
    "gasUsed": "3102696",
    "logsBloom": "0x
    "blockHash": "0x67730f89a77f618c506952ce8fd89810f7a246f1099d01fc015340cf02304a2f",
    "transactionHash": "0x827b41d1c4c91ead2bfa67e0d029053a621ca1f052dd4b2fe780badacfd449db",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 38187547,
        "transactionHash": "0x827b41d1c4c91ead2bfa67e0d029053a621ca1f052dd4b2fe780badacfd449db",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c5feaf9c4bac539c178bef3aa55d05f4d22f2abb",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001d35ff291c2d98000000000000000000000000000000000000000000000000307d259057f0af5b0000000000000000000000000000000000000000000020de44e97e69469350d2000000000000000000000000000000000000000000000000305fef912ed481c30000000000000000000000000000000000000000000020de4506b4686faf7e6a",
        "logIndex": 2,
        "blockHash": "0x67730f89a77f618c506952ce8fd89810f7a246f1099d01fc015340cf02304a2f"
      }
    ],
    "blockNumber": 38187547,
    "cumulativeGasUsed": "3431208",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4d8Bf5Ce6609e139AFB76b7c5D169f4f85c62280"
  ],
  "numDeployments": 2,
  "solcInputHash": "1d7ddff20a7a20965bdbcc14355db382",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tinu\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAssets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"}],\"name\":\"CollateralOwnerTrasnfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"DecreaseCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"DecreaseDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"IncreaseCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"IncreaseDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAssets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unitDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"}],\"name\":\"LiquidateCollateral\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"}],\"name\":\"_getLiquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseCollateralFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"decreaseDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"increaseCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"increaseDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"increaseDebtFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"liquidation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationTreasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setLiquidationRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidationTreasuryFee\",\"type\":\"uint256\"}],\"name\":\"setLiquidationTreasuryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumCollateral\",\"type\":\"uint256\"}],\"name\":\"setMinimumCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tinu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokenToTinu\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"}],\"name\":\"transferVaultOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"upgradeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_checkCollateral\",\"type\":\"bool\"}],\"name\":\"validateLiquidation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultOwnerAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tinuDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultPoolAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tinuDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"contracts/core/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\nimport '../interfaces/IVault.sol';\\nimport \\\"../interfaces/ITinuToken.sol\\\";\\nimport '../interfaces/ICollateralManager.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport '../interfaces/IVaultPriceFeed.sol';\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Vault is IVault {\\n\\n    using SafeMath for uint256;\\n\\n    event IncreaseCollateral (\\n        address indexed owner,\\n        uint256 indexed unitDebt,\\n        address collateralToken,\\n        uint256 amount,\\n        uint256 indexed liquidationPrice\\n    );\\n\\n    event DecreaseCollateral (\\n        address indexed owner,\\n        uint256 indexed unitDebt,\\n        address collateralToken,\\n        uint256 collateralAmount,\\n        uint256 indexed liquidationPrice\\n    );\\n\\n    event CollateralOwnerTrasnfer (\\n        address indexed from,\\n        address indexed to,\\n        address token,\\n        uint256 tokenAssets,\\n        uint256 unitDebt\\n    );\\n\\n    event IncreaseDebt (\\n        address indexed owner,\\n        uint256 indexed unitDebt,\\n        address collateralToken,\\n        uint256 amount,\\n        uint256 indexed liquidationPrice\\n    );\\n\\n    event DecreaseDebt (\\n        address indexed owner,\\n        uint256 indexed unitDebt,\\n        address collateralToken,\\n        uint256 amount,\\n        uint256 indexed liquidationPrice\\n    );\\n\\n    event Approval(\\n        address indexed owner, \\n        address operator,\\n        bool allow\\n    );\\n\\n    event LiquidateCollateral(\\n        address indexed owner,\\n        address collateralToken,\\n        uint256 tokenAssets,\\n        uint256 unitDebt,\\n        address feeTo\\n    );\\n\\n    address public gov;\\n\\n    address public tinu;\\n\\n    address public priceFeed;\\n\\n    address public treasury;\\n\\n    uint256 public liquidationTreasuryFee = 990; // 990 = 1.0%\\n\\n    uint256 public liquidationRatio = 1150; // 1150 = 15.0%\\n    \\n    uint256 public minimumCollateral = 100 * 1e18 ; // default 100 UNIT\\n    \\n    struct Account {\\n        uint256 tokenAssets;\\n        uint256 tinuDebt;\\n    }\\n\\n    mapping (address => mapping (address => Account) ) public override vaultOwnerAccount;\\n\\n    mapping (address => Account) public vaultPoolAccount;\\n\\n    mapping(address => mapping(address => bool)) public allowances;\\n\\n    modifier onlyGov {\\n        require(msg.sender == gov, \\\"Vault: onlyGov\\\");\\n        _;\\n    }\\n\\n    constructor(address _tinu) {\\n        gov = msg.sender;\\n        tinu = _tinu;\\n    }\\n\\n    function setGov(address _gov) public onlyGov{\\n        gov = _gov;\\n    }\\n\\n    function setPriceFeed(address _priceFeed) public onlyGov {\\n        priceFeed = _priceFeed;\\n    }\\n\\n    function setLiquidationRatio(uint256 _ratio) public onlyGov {\\n        liquidationRatio = _ratio;\\n    }\\n    function setTreasury(address _treasury) public  onlyGov{\\n        treasury = _treasury;\\n    }\\n\\n    function setMinimumCollateral(uint256 _minimumCollateral) public  onlyGov{\\n        minimumCollateral = _minimumCollateral;\\n    }\\n\\n    function setLiquidationTreasuryFee(uint256 _liquidationTreasuryFee) public  onlyGov{\\n        liquidationTreasuryFee = _liquidationTreasuryFee;\\n    }\\n\\n    // the governance controlling this function should have a timelock\\n    function upgradeVault(address _newVault, address _token, uint256 _amount) external onlyGov {\\n        IERC20(_token).transfer(_newVault, _amount);\\n    }\\n\\n    function approve(address _operator, bool _allow) public {\\n        allowances[msg.sender][_operator] = _allow;\\n        emit Approval(msg.sender, _operator, _allow);\\n    }\\n\\n    function increaseCollateral(\\n        address _collateralToken, \\n        address _receiver\\n    ) external override returns (bool) {\\n        uint256 _balance0 = vaultPoolAccount[_collateralToken].tokenAssets;\\n        uint256 _balance1 = IERC20(_collateralToken).balanceOf(address(this));\\n        require(_balance1 > 0, \\\"Vault: balance1==0\\\");\\n        uint256 _balanceDelta = _balance1.sub(_balance0);\\n        require(_balanceDelta > 0, \\\"Vault: 0\\\");\\n        vaultOwnerAccount[_receiver][_collateralToken].tokenAssets =  vaultOwnerAccount[_receiver][_collateralToken].tokenAssets.add(_balanceDelta);\\n        vaultPoolAccount[_collateralToken].tokenAssets =  vaultPoolAccount[_collateralToken].tokenAssets.add(_balanceDelta);\\n        emit IncreaseCollateral(\\n            _receiver, \\n            vaultOwnerAccount[_receiver][_collateralToken].tinuDebt, \\n            _collateralToken, \\n            _balanceDelta, \\n            _getLiquidationPrice(_receiver, _collateralToken)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseCollateral(\\n        address _collateralToken,\\n        address _receiver,\\n        uint256 _collateralAmount\\n    ) external override returns (bool){\\n        _decreaseCollateral(msg.sender, _collateralToken, _receiver, _collateralAmount);\\n        return true;\\n    }\\n\\n    function _decreaseCollateral(\\n        address _from,\\n        address _collateralToken,\\n        address _receiver,\\n        uint256 _collateralAmount\\n    ) internal returns (bool){\\n        uint256 _tokenAssets = vaultOwnerAccount[_from][_collateralToken].tokenAssets;\\n        require(_collateralAmount <= _tokenAssets, \\\"Vault: insufficient collateral balance!\\\");\\n\\n        vaultOwnerAccount[_from][_collateralToken].tokenAssets =  vaultOwnerAccount[_from][_collateralToken].tokenAssets.sub(_collateralAmount);\\n        vaultPoolAccount[_collateralToken].tokenAssets =  vaultPoolAccount[_collateralToken].tokenAssets.sub(_collateralAmount);\\n     \\n        bool yes = validateLiquidation(_from, _collateralToken, true); \\n        require(!yes, \\\"Vault: collateral amount out of range\\\");\\n\\n        IERC20(_collateralToken).transfer(_receiver, _collateralAmount);\\n        emit DecreaseCollateral(\\n            _from, \\n            vaultOwnerAccount[_from][_collateralToken].tinuDebt, \\n            _collateralToken, \\n            _collateralAmount, \\n            _getLiquidationPrice(_from, _collateralToken));\\n        return true;\\n    }\\n    \\n    function decreaseCollateralFrom(\\n        address _from,\\n        address _collateralToken,\\n        address _receiver,\\n        uint256 _collateralAmount\\n    ) external override returns (bool){\\n        require(allowances[_from][msg.sender], \\\"Vault: not allow\\\");\\n        _decreaseCollateral(_from, _collateralToken, _receiver, _collateralAmount);\\n        return true;\\n    }\\n\\n    function _increaseDebt(address _from, address _collateralToken, uint256 _amount, address _receiver) internal returns (bool)  {\\n        vaultOwnerAccount[_from][_collateralToken].tinuDebt = vaultOwnerAccount[_from][_collateralToken].tinuDebt.add(_amount);\\n        bool yes = validateLiquidation(_from, _collateralToken, true);\\n        require(!yes, \\\"Vault: unit debt out of range\\\");\\n\\n        ITinuToken(tinu).mint(_receiver, _amount);\\n        emit IncreaseDebt(\\n            _from, \\n            vaultOwnerAccount[_from][_collateralToken].tinuDebt,\\n            _collateralToken, \\n            _amount, \\n            _getLiquidationPrice(_from, _collateralToken)\\n        );\\n        return true;\\n    }\\n    \\n    function increaseDebt(address _collateralToken, uint256 _amount, address _receiver) external override returns (bool)  {\\n        _increaseDebt(msg.sender, _collateralToken, _amount, _receiver);\\n        \\n        return true;\\n    }\\n    function increaseDebtFrom(address _from, address _collateralToken, uint256 _amount, address _receiver) external override returns (bool)  {\\n        require(allowances[_from][msg.sender], \\\"Vault: not allow\\\");\\n        _increaseDebt(_from, _collateralToken, _amount, _receiver);\\n\\n        return true;\\n    }\\n\\n    function decreaseDebt(\\n        address _collateralToken,\\n        address _receiver\\n    ) external override returns (bool) {\\n        uint256 _balance = IERC20(tinu).balanceOf(address(this));\\n        require(_balance > 0, \\\"balance == 0\\\");\\n        ITinuToken(tinu).burn(_balance);\\n        vaultOwnerAccount[_receiver][_collateralToken].tinuDebt = vaultOwnerAccount[_receiver][_collateralToken].tinuDebt.sub(_balance);\\n        emit DecreaseDebt(\\n            _receiver, \\n            vaultOwnerAccount[_receiver][_collateralToken].tinuDebt,\\n            _collateralToken, \\n            _balance, \\n            _getLiquidationPrice(_receiver, _collateralToken)\\n        );\\n\\n        return true;\\n    }\\n\\n    function liquidation(address _collateralToken, address _account, address _feeTo) external override returns (bool) {\\n        bool yes = validateLiquidation(_account, _collateralToken, false);\\n        require(yes, \\\"Vault: no validateLiquidation\\\");\\n        uint256 _balance = IERC20(tinu).balanceOf(address(this));\\n        Account storage account = vaultOwnerAccount[_account][_collateralToken];\\n        require(_balance >= account.tinuDebt, \\\"Vault: insufficient unit token\\\");\\n        ITinuToken(tinu).burn(account.tinuDebt);\\n\\n        uint256 _treasuryFee =  account.tokenAssets.mul(1000).sub(account.tokenAssets.mul(liquidationTreasuryFee)).div(1000); // 1%, liquidationTreasuryFee default 990\\n        uint256 _returnCollateral = account.tokenAssets.sub(_treasuryFee);\\n\\n        IERC20(_collateralToken).transfer(treasury, _treasuryFee);\\n        IERC20(_collateralToken).transfer(_feeTo, _returnCollateral);\\n\\n        emit LiquidateCollateral(_account, _collateralToken, account.tokenAssets, account.tinuDebt, _feeTo);\\n        account.tinuDebt = 0;\\n        account.tokenAssets = 0;\\n\\n        return true;\\n    }\\n\\n    function validateLiquidation(address _account, address _collateralToken, bool _checkCollateral ) public view returns(bool){\\n        Account memory account = vaultOwnerAccount[_account][_collateralToken];\\n        uint256 _price = getPrice(_collateralToken);\\n        uint256 _tokenTinuAmount = tokenToTinu(_price, account.tokenAssets);\\n\\n        if(_checkCollateral && account.tinuDebt > 0) {\\n            require(_tokenTinuAmount >=  minimumCollateral, \\\"Vault: minimumCollateral\\\");\\n        }\\n\\n        if(_tokenTinuAmount.mul(1000) >= account.tinuDebt.mul(liquidationRatio)) { // liquidationRatio = 1150.  115.0  \\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    function _getLiquidationPrice(address _account, address _collateralToken ) public view returns(uint256) {\\n        Account memory account = vaultOwnerAccount[_account][_collateralToken];\\n        if (account.tokenAssets > 0) {\\n            uint256 _liquidationPrice = account.tinuDebt.mul(liquidationRatio).div(account.tokenAssets);\\n            return _liquidationPrice;\\n        } \\n        return 0;\\n    }\\n\\n    function tokenToTinu(uint256 _price, uint256 amount) public pure returns(uint256){\\n        return _price.mul(amount).div(1e18);\\n    }\\n\\n    function getPrice(address _token) public override view returns (uint256) {\\n        return IVaultPriceFeed(priceFeed).getPrice(_token);\\n    }\\n   \\n    function transferVaultOwner(address _newAccount, address _collateralToken) external override {\\n        Account storage account = vaultOwnerAccount[msg.sender][_collateralToken];\\n        Account storage newAccount = vaultOwnerAccount[_newAccount][_collateralToken];\\n        require(newAccount.tokenAssets == 0, \\\"Vault: newAccount not new\\\");     \\n        \\n        newAccount.tokenAssets = newAccount.tokenAssets.add(account.tokenAssets);\\n        newAccount.tinuDebt = newAccount.tinuDebt.add(account.tinuDebt);\\n\\n        account.tokenAssets = 0;\\n        account.tinuDebt = 0;\\n    \\n        emit CollateralOwnerTrasnfer(msg.sender, _newAccount, _collateralToken, account.tokenAssets, account.tinuDebt);\\n    }\\n}\",\"keccak256\":\"0x7a00e9f736d3b6b3f9ab50d117d4f92bbf1d66ee1c6ccadbd39e443c34199f05\",\"license\":\"MIT\"},\"contracts/interfaces/ICollateralManager.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\ninterface ICollateralManager {\\n    function liquidationFee(address) external view returns(uint256);\\n    function maxDecreaseCollateralAmount(address _collateralToken, address _account,  uint256 _totalCollateralAmount) external view returns(uint256);\\n    function maxMintUnitValue(address _collateralToken, address _account) external view returns(uint256);\\n}\",\"keccak256\":\"0xc70a2dceda0bd0f777d2adcaefb25005af6b17e890fdb5de725409b567c8f0a6\",\"license\":\"MIT\"},\"contracts/interfaces/ITinuToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\ninterface ITinuToken {\\n    function mint(address _to, uint256 value) external returns(bool);\\n    function burn(uint256 value) external returns(bool);\\n    // function unitDebt(address _account, address _collateralToken) external view returns( uint256);\\n}\",\"keccak256\":\"0x4ec5f6aa074e77da883767accb393589dc03c7701f413360003aa9f2ea15e573\",\"license\":\"MIT\"},\"contracts/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\ninterface IVault {\\n\\n    // The number of all tokens in the pool\\n    // function poolAmounts(address _token) external view returns (uint256);\\n   \\n    function increaseCollateral(address _collateralToken, address _receiver) external returns (bool);\\n    \\n    function decreaseCollateral(\\n        address _collateralToken,\\n        address _receiver, \\n        uint256 _collateralAmount\\n    ) external returns(bool);\\n    \\n    function decreaseCollateralFrom(\\n        address _from,\\n        address _collateralToken,\\n        address _receiver,\\n        uint256 _collateralAmount\\n    ) external returns (bool);\\n\\n    function liquidation(address _token, address _account, address _feeTo\\n    ) external returns (bool);\\n\\n    \\n\\n    // function vaultOwnerAccount(address _receiver, address _collateralToken) external view returns (uint256);\\n\\n    function increaseDebt(address _collateralToken, uint256 _amount, address _receiver) external returns (bool);\\n    function increaseDebtFrom(address from,address _collateralToken, uint256 _amount, address _receiver) external returns (bool);\\n\\n    function decreaseDebt(\\n        address _collateralToken,\\n        address _receiver\\n    ) external returns (bool);\\n\\n     function getPrice(address _token) external view returns (uint256);\\n\\n    function transferVaultOwner(address _newAccount, address _collateralToken) external;\\n    // function transferFromVaultOwner(address _from ,address _newAccount, address _collateralToken, uint256 _tokenAssets, uint256 _unitDebt) external;\\n\\n    function vaultOwnerAccount(address _account, address _collateralToken) external view returns (uint256, uint256);\\n\\n}\",\"keccak256\":\"0x85f0c27f37ba24d94c0f25ee3bcf96f629beb352771ff580ab96361f1a1ea542\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\ninterface IVaultPriceFeed {\\n\\n    function getPrice(address _token) external view returns (uint256);\\n \\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals\\n    ) external;\\n\\n    function tokenToUnit(address _token, uint256 _price, uint256 amount) external view returns(uint256);\\n}\\n\",\"keccak256\":\"0x08029914e2d0c72232a85575806a4197e2ce31ff0941016bdba84baa44cd0fac\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526103de60045561047e60055568056bc75e2d631000006006553480156200002a57600080fd5b50604051620036bf380380620036bf833981810160405281019062000050919062000142565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000174565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010a82620000dd565b9050919050565b6200011c81620000fd565b81146200012857600080fd5b50565b6000815190506200013c8162000111565b92915050565b6000602082840312156200015b576200015a620000d8565b5b60006200016b848285016200012b565b91505092915050565b61353b80620001846000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637c4f021b11610104578063c3aaef26116100a2578063cfad57a211610071578063cfad57a2146105b7578063f0f44260146105d3578063f8190a46146105ef578063fb5bc1591461061f576101da565b8063c3aaef2614610531578063c865c8851461054f578063c9af2cf41461056b578063cea0c3281461059b576101da565b8063b82008e5116100de578063b82008e514610497578063babe7c74146104b3578063bdb60897146104d1578063c2d7ef6d14610501576101da565b80637c4f021b1461042c5780638929d36d1461045d578063946ce8cd1461047b576101da565b80633d140d211161017c57806361d027b31161014b57806361d027b3146103a4578063724e78da146103c2578063741bef1a146103de578063786106f3146103fc576101da565b80633d140d21146102f857806341976e09146103145780634a1912931461034457806355b6ed5c14610374576101da565b8063265dd443116101b8578063265dd4431461024c57806329c8bbe51461027c5780632bc2ccdc146102ac578063326d5749146102dc576101da565b806312d43a51146101df5780631775765f146101fd57806322a65a391461021b575b600080fd5b6101e761064f565b6040516101f491906128a2565b60405180910390f35b610205610673565b60405161021291906128d6565b60405180910390f35b61023560048036038101906102309190612922565b610679565b604051610243929190612962565b60405180910390f35b610266600480360381019061026191906129c3565b6106aa565b6040516102739190612a25565b60405180910390f35b61029660048036038101906102919190612922565b610813565b6040516102a39190612a25565b60405180910390f35b6102c660048036038101906102c19190612a6c565b610b90565b6040516102d39190612a25565b60405180910390f35b6102f660048036038101906102f19190612ad3565b610c74565b005b610312600480360381019061030d9190612b00565b610d0c565b005b61032e60048036038101906103299190612b40565b610df4565b60405161033b91906128d6565b60405180910390f35b61035e60048036038101906103599190612922565b610e99565b60405161036b9190612a25565b60405180910390f35b61038e60048036038101906103899190612922565b611293565b60405161039b9190612a25565b60405180910390f35b6103ac6112c2565b6040516103b991906128a2565b60405180910390f35b6103dc60048036038101906103d79190612b40565b6112e8565b005b6103e66113ba565b6040516103f391906128a2565b60405180910390f35b61041660048036038101906104119190612b6d565b6113e0565b6040516104239190612a25565b60405180910390f35b61044660048036038101906104419190612b40565b611851565b604051610454929190612962565b60405180910390f35b610465611875565b60405161047291906128a2565b60405180910390f35b61049560048036038101906104909190612ad3565b61189b565b005b6104b160048036038101906104ac9190612ad3565b611933565b005b6104bb6119cb565b6040516104c891906128d6565b60405180910390f35b6104eb60048036038101906104e69190612bc0565b6119d1565b6040516104f89190612a25565b60405180910390f35b61051b60048036038101906105169190612c27565b611ab5565b6040516105289190612a25565b60405180910390f35b610539611acf565b60405161054691906128d6565b60405180910390f35b61056960048036038101906105649190612922565b611ad5565b005b61058560048036038101906105809190612c7a565b611ced565b60405161059291906128d6565b60405180910390f35b6105b560048036038101906105b09190612c27565b611d24565b005b6105d160048036038101906105cc9190612b40565b611e36565b005b6105ed60048036038101906105e89190612b40565b611f07565b005b61060960048036038101906106049190612cba565b611fd9565b6040516106169190612a25565b60405180910390f35b61063960048036038101906106349190612922565b611ff3565b60405161064691906128d6565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600061075585610df4565b90506000610767828460000151611ced565b905084801561077a575060008360200151115b156107c5576006548110156107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90612d6a565b60405180910390fd5b5b6107de60055484602001516120e990919063ffffffff16565b6107f36103e8836120e990919063ffffffff16565b10610804576000935050505061080c565b600193505050505b9392505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087191906128a2565b602060405180830381865afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190612d9f565b9050600081116108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee90612e18565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161095291906128d6565b6020604051808303816000875af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190612e4d565b50610a2881600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546120ff90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610ab58385611ff3565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548473ffffffffffffffffffffffffffffffffffffffff167fe130e23e77258a8c2fa510c15227552c4582a2b39936b96f4cd5132fc14970408785604051610b7d929190612e7a565b60405180910390a4600191505092915050565b6000600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290612eef565b60405180910390fd5b610c6785858585612115565b5060019050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf990612f5b565b60405180910390fd5b8060068190555050565b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f1d3e246ebbc933bf65d3290db9f93d67ab91a12d2b19308a35806e04d1c174c58383604051610de8929190612f7b565b60405180910390a25050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09836040518263ffffffff1660e01b8152600401610e5191906128a2565b602060405180830381865afa158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e929190612d9f565b9050919050565b600080600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f1c91906128a2565b602060405180830381865afa158015610f39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5d9190612d9f565b905060008111610fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9990612ff0565b60405180910390fd5b6000610fb783836120ff90919063ffffffff16565b905060008111610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff39061305c565b60405180910390fd5b61108e81600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461254590919063ffffffff16565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061116681600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461254590919063ffffffff16565b600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506111b68587611ff3565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548673ffffffffffffffffffffffffffffffffffffffff167fe8a0fdaece68f655a85b4a1404ca9f25726a722afe9ef1abd4621c8f2a26f703898560405161127e929190612e7a565b60405180910390a46001935050505092915050565b60096020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d90612f5b565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806113ef848660006106aa565b905080611431576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611428906130c8565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161148e91906128a2565b602060405180830381865afa1580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf9190612d9f565b90506000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154821015611598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158f90613134565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c6882600101546040518263ffffffff1660e01b81526004016115f791906128d6565b6020604051808303816000875af1158015611616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163a9190612e4d565b5060006116946103e861168661165f60045486600001546120e990919063ffffffff16565b6116786103e887600001546120e990919063ffffffff16565b6120ff90919063ffffffff16565b61255b90919063ffffffff16565b905060006116af8284600001546120ff90919063ffffffff16565b90508873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161170e929190612e7a565b6020604051808303816000875af115801561172d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117519190612e4d565b508873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b815260040161178d929190612e7a565b6020604051808303816000875af11580156117ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d09190612e4d565b508773ffffffffffffffffffffffffffffffffffffffff167fcccbd13f642722af82e739ab754dfdaa1f106fb544a0d6cd410e02925902d8498a856000015486600101548b6040516118259493929190613154565b60405180910390a260008360010181905550600083600001819055506001955050505050509392505050565b60086020528060005260406000206000915090508060000154908060010154905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192090612f5b565b60405180910390fd5b8060058190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b890612f5b565b60405180910390fd5b8060048190555050565b60065481565b6000600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9390612eef565b60405180910390fd5b611aa885858585612571565b5060019050949350505050565b6000611ac333858585612115565b50600190509392505050565b60045481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414611c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c13906131e5565b60405180910390fd5b611c378260000154826000015461254590919063ffffffff16565b8160000181905550611c5a8260010154826001015461254590919063ffffffff16565b816001018190555060008260000181905550600082600101819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4fe5839fdbf54904a01ecfaee9b7148fdaa27cd24e3af269eab70da7ee90d1278585600001548660010154604051611cdf93929190613205565b60405180910390a350505050565b6000611d1c670de0b6b3a7640000611d0e84866120e990919063ffffffff16565b61255b90919063ffffffff16565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da990612f5b565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611ded929190612e7a565b6020604051808303816000875af1158015611e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e309190612e4d565b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebb90612f5b565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8c90612f5b565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611fe733858585612571565b50600190509392505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111156120dd5760006120d182600001516120c360055485602001516120e990919063ffffffff16565b61255b90919063ffffffff16565b905080925050506120e3565b60009150505b92915050565b600081836120f7919061326b565b905092915050565b6000818361210d91906132ad565b905092915050565b600080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050808311156121dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d490613353565b60405180910390fd5b61226f83600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546120ff90919063ffffffff16565b600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061234783600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546120ff90919063ffffffff16565b600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600061239b878760016106aa565b905080156123de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d5906133e5565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401612419929190612e7a565b6020604051808303816000875af1158015612438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245c9190612e4d565b506124678787611ff3565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548873ffffffffffffffffffffffffffffffffffffffff167fa2390b63bf9219f15f3ae4d4b5952539690d27c9941baebb018d73bb1a555567898860405161252f929190612e7a565b60405180910390a4600192505050949350505050565b600081836125539190613405565b905092915050565b600081836125699190613468565b905092915050565b600061260583600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461254590919063ffffffff16565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000612696868660016106aa565b905080156126d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d0906134e5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984866040518363ffffffff1660e01b8152600401612736929190612e7a565b6020604051808303816000875af1158015612755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127799190612e4d565b506127848686611ff3565b600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548773ffffffffffffffffffffffffffffffffffffffff167fcd861425ba2c6c453ea851ba6a715931f3902d65c2ccfef2bf458d3077f0fcbf888860405161284c929190612e7a565b60405180910390a46001915050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061288c82612861565b9050919050565b61289c81612881565b82525050565b60006020820190506128b76000830184612893565b92915050565b6000819050919050565b6128d0816128bd565b82525050565b60006020820190506128eb60008301846128c7565b92915050565b600080fd5b6128ff81612881565b811461290a57600080fd5b50565b60008135905061291c816128f6565b92915050565b60008060408385031215612939576129386128f1565b5b60006129478582860161290d565b92505060206129588582860161290d565b9150509250929050565b600060408201905061297760008301856128c7565b61298460208301846128c7565b9392505050565b60008115159050919050565b6129a08161298b565b81146129ab57600080fd5b50565b6000813590506129bd81612997565b92915050565b6000806000606084860312156129dc576129db6128f1565b5b60006129ea8682870161290d565b93505060206129fb8682870161290d565b9250506040612a0c868287016129ae565b9150509250925092565b612a1f8161298b565b82525050565b6000602082019050612a3a6000830184612a16565b92915050565b612a49816128bd565b8114612a5457600080fd5b50565b600081359050612a6681612a40565b92915050565b60008060008060808587031215612a8657612a856128f1565b5b6000612a948782880161290d565b9450506020612aa58782880161290d565b9350506040612ab68782880161290d565b9250506060612ac787828801612a57565b91505092959194509250565b600060208284031215612ae957612ae86128f1565b5b6000612af784828501612a57565b91505092915050565b60008060408385031215612b1757612b166128f1565b5b6000612b258582860161290d565b9250506020612b36858286016129ae565b9150509250929050565b600060208284031215612b5657612b556128f1565b5b6000612b648482850161290d565b91505092915050565b600080600060608486031215612b8657612b856128f1565b5b6000612b948682870161290d565b9350506020612ba58682870161290d565b9250506040612bb68682870161290d565b9150509250925092565b60008060008060808587031215612bda57612bd96128f1565b5b6000612be88782880161290d565b9450506020612bf98782880161290d565b9350506040612c0a87828801612a57565b9250506060612c1b8782880161290d565b91505092959194509250565b600080600060608486031215612c4057612c3f6128f1565b5b6000612c4e8682870161290d565b9350506020612c5f8682870161290d565b9250506040612c7086828701612a57565b9150509250925092565b60008060408385031215612c9157612c906128f1565b5b6000612c9f85828601612a57565b9250506020612cb085828601612a57565b9150509250929050565b600080600060608486031215612cd357612cd26128f1565b5b6000612ce18682870161290d565b9350506020612cf286828701612a57565b9250506040612d038682870161290d565b9150509250925092565b600082825260208201905092915050565b7f5661756c743a206d696e696d756d436f6c6c61746572616c0000000000000000600082015250565b6000612d54601883612d0d565b9150612d5f82612d1e565b602082019050919050565b60006020820190508181036000830152612d8381612d47565b9050919050565b600081519050612d9981612a40565b92915050565b600060208284031215612db557612db46128f1565b5b6000612dc384828501612d8a565b91505092915050565b7f62616c616e6365203d3d20300000000000000000000000000000000000000000600082015250565b6000612e02600c83612d0d565b9150612e0d82612dcc565b602082019050919050565b60006020820190508181036000830152612e3181612df5565b9050919050565b600081519050612e4781612997565b92915050565b600060208284031215612e6357612e626128f1565b5b6000612e7184828501612e38565b91505092915050565b6000604082019050612e8f6000830185612893565b612e9c60208301846128c7565b9392505050565b7f5661756c743a206e6f7420616c6c6f7700000000000000000000000000000000600082015250565b6000612ed9601083612d0d565b9150612ee482612ea3565b602082019050919050565b60006020820190508181036000830152612f0881612ecc565b9050919050565b7f5661756c743a206f6e6c79476f76000000000000000000000000000000000000600082015250565b6000612f45600e83612d0d565b9150612f5082612f0f565b602082019050919050565b60006020820190508181036000830152612f7481612f38565b9050919050565b6000604082019050612f906000830185612893565b612f9d6020830184612a16565b9392505050565b7f5661756c743a2062616c616e6365313d3d300000000000000000000000000000600082015250565b6000612fda601283612d0d565b9150612fe582612fa4565b602082019050919050565b6000602082019050818103600083015261300981612fcd565b9050919050565b7f5661756c743a2030000000000000000000000000000000000000000000000000600082015250565b6000613046600883612d0d565b915061305182613010565b602082019050919050565b6000602082019050818103600083015261307581613039565b9050919050565b7f5661756c743a206e6f2076616c69646174654c69717569646174696f6e000000600082015250565b60006130b2601d83612d0d565b91506130bd8261307c565b602082019050919050565b600060208201905081810360008301526130e1816130a5565b9050919050565b7f5661756c743a20696e73756666696369656e7420756e697420746f6b656e0000600082015250565b600061311e601e83612d0d565b9150613129826130e8565b602082019050919050565b6000602082019050818103600083015261314d81613111565b9050919050565b60006080820190506131696000830187612893565b61317660208301866128c7565b61318360408301856128c7565b6131906060830184612893565b95945050505050565b7f5661756c743a206e65774163636f756e74206e6f74206e657700000000000000600082015250565b60006131cf601983612d0d565b91506131da82613199565b602082019050919050565b600060208201905081810360008301526131fe816131c2565b9050919050565b600060608201905061321a6000830186612893565b61322760208301856128c7565b61323460408301846128c7565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613276826128bd565b9150613281836128bd565b925082820261328f816128bd565b915082820484148315176132a6576132a561323c565b5b5092915050565b60006132b8826128bd565b91506132c3836128bd565b92508282039050818111156132db576132da61323c565b5b92915050565b7f5661756c743a20696e73756666696369656e7420636f6c6c61746572616c206260008201527f616c616e63652100000000000000000000000000000000000000000000000000602082015250565b600061333d602783612d0d565b9150613348826132e1565b604082019050919050565b6000602082019050818103600083015261336c81613330565b9050919050565b7f5661756c743a20636f6c6c61746572616c20616d6f756e74206f7574206f662060008201527f72616e6765000000000000000000000000000000000000000000000000000000602082015250565b60006133cf602583612d0d565b91506133da82613373565b604082019050919050565b600060208201905081810360008301526133fe816133c2565b9050919050565b6000613410826128bd565b915061341b836128bd565b92508282019050808211156134335761343261323c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613473826128bd565b915061347e836128bd565b92508261348e5761348d613439565b5b828204905092915050565b7f5661756c743a20756e69742064656274206f7574206f662072616e6765000000600082015250565b60006134cf601d83612d0d565b91506134da82613499565b602082019050919050565b600060208201905081810360008301526134fe816134c2565b905091905056fea2646970667358221220766e5bb1f3510ca9a35f080d0b49b32cd156873c8f531c80fec6fc0e5113de5a64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1290,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1292,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tinu",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1294,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1296,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "treasury",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1299,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "liquidationTreasuryFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1302,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "liquidationRatio",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1307,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "minimumCollateral",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1320,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "vaultOwnerAccount",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Account)1312_storage))"
      },
      {
        "astId": 1325,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "vaultPoolAccount",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Account)1312_storage)"
      },
      {
        "astId": 1331,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "allowances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Account)1312_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct Vault.Account))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Account)1312_storage)"
      },
      "t_mapping(t_address,t_struct(Account)1312_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Vault.Account)",
        "numberOfBytes": "32",
        "value": "t_struct(Account)1312_storage"
      },
      "t_struct(Account)1312_storage": {
        "encoding": "inplace",
        "label": "struct Vault.Account",
        "members": [
          {
            "astId": 1309,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "tokenAssets",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1311,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "tinuDebt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}